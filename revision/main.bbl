% Generated by IEEEtran.bst, version: 1.12 (2007/01/11)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{mckeen2013innovative}
F.~McKeen, I.~Alexandrovich, A.~Berenzon, C.~V. Rozas, H.~Shafi, V.~Shanbhogue,
  and U.~R. Savagaonkar, ``{Innovative Instructions and Software Model for
  Isolated Execution.}'' \emph{Hasp, isca}, vol.~10, no.~1, 2013.

\bibitem{russinovich2017introducing}
M.~Russinovich, ``{Introducing Azure confidential computing},'' \emph{Seattle,
  WA: Microsoft}, 2017.

\bibitem{asylo2019}
\BIBentryALTinterwordspacing
``{Google. Asylo},'' 2019. [Online]. Available: \url{https://asylo.dev/}
\BIBentrySTDinterwordspacing

\bibitem{ccc2019}
\BIBentryALTinterwordspacing
``{Confidential Computing Consortium},'' 2019. [Online]. Available:
  \url{https://confidentialcomputing.io}
\BIBentrySTDinterwordspacing

\bibitem{zhang2017presence}
Z.~Zhang, X.~Ding, G.~Tsudik, J.~Cui, and Z.~Li, ``Presence attestation: The
  missing link in dynamic trust bootstrapping,'' in \emph{Proceedings of the
  2017 ACM SIGSAC Conference on Computer and Communications Security}, 2017,
  pp. 89--102.

\bibitem{chakrabarti2019scaling}
S.~Chakrabarti, M.~Hoekstra, D.~Kuvaiskii, and M.~Vij, ``Scaling
  intel{\textregistered} software guard extensions applications with
  intel{\textregistered} sgx card,'' in \emph{Proceedings of the 8th
  International Workshop on Hardware and Architectural Support for Security and
  Privacy}, 2019, pp. 1--9.

\bibitem{priebe2019sgx}
C.~Priebe, D.~Muthukumaran, J.~Lind, H.~Zhu, S.~Cui, V.~A. Sartakov, and
  P.~Pietzuch, ``Sgx-lkl: Securing the host os interface for trusted
  execution,'' \emph{arXiv preprint arXiv:1908.11143}, 2019.

\bibitem{shen2020occlum}
Y.~Shen, H.~Tian, Y.~Chen, K.~Chen, R.~Wang, Y.~Xu, Y.~Xia, and S.~Yan,
  ``Occlum: Secure and efficient multitasking inside a single enclave of intel
  sgx,'' in \emph{Proceedings of the Twenty-Fifth International Conference on
  Architectural Support for Programming Languages and Operating Systems}, 2020,
  pp. 955--970.

\bibitem{arnautov2016scone}
S.~Arnautov, B.~Trach, F.~Gregor, T.~Knauth, A.~Martin, C.~Priebe, J.~Lind,
  D.~Muthukumaran, D.~O'keeffe, M.~L. Stillwell \emph{et~al.}, ``$\{$SCONE$\}$:
  Secure linux containers with intel $\{$SGX$\}$,'' in \emph{12th
  $\{$USENIX$\}$ Symposium on Operating Systems Design and Implementation
  ($\{$OSDI$\}$ 16)}, 2016, pp. 689--703.

\bibitem{hunt2018ryoan}
T.~Hunt, Z.~Zhu, Y.~Xu, S.~Peter, and E.~Witchel, ``Ryoan: A distributed
  sandbox for untrusted computation on secret data,'' \emph{ACM Transactions on
  Computer Systems (TOCS)}, vol.~35, no.~4, p.~13, 2018.

\bibitem{wang2019towards}
H.~Wang, P.~Wang, Y.~Ding, M.~Sun, Y.~Jing, R.~Duan, L.~Li, Y.~Zhang, T.~Wei,
  and Z.~Lin, ``Towards memory safe enclave programming with rust-sgx,'' in
  \emph{Proceedings of the 2019 ACM SIGSAC Conference on Computer and
  Communications Security}, 2019, pp. 2333--2350.

\bibitem{wang2019running}
H.~Wang, E.~Bauman, V.~Karande, Z.~Lin, Y.~Cheng, and Y.~Zhang, ``Running
  language interpreters inside sgx: A lightweight, legacy-compatible script
  code hardening approach,'' in \emph{Proceedings of the 2019 ACM Asia
  Conference on Computer and Communications Security}, 2019, pp. 114--121.

\bibitem{lazard2018teeshift}
T.~Lazard, J.~G{\"o}tzfried, T.~M{\"u}ller, G.~Santinelli, and V.~Lefebvre,
  ``Teeshift: protecting code confidentiality by selectively shifting functions
  into tees,'' in \emph{Proceedings of the 3rd Workshop on System Software for
  Trusted Execution}, 2018, pp. 14--19.

\bibitem{van2019tale}
J.~Van~Bulck, D.~Oswald, E.~Marin, A.~Aldoseri, F.~D. Garcia, and F.~Piessens,
  ``A tale of two worlds: Assessing the vulnerability of enclave shielding
  runtimes,'' in \emph{Proceedings of the 2019 ACM SIGSAC Conference on
  Computer and Communications Security}, 2019, pp. 1741--1758.

\bibitem{necula1997proof}
G.~C. Necula, ``Proof-carrying code,'' in \emph{Proceedings of the 24th ACM
  SIGPLAN-SIGACT symposium on Principles of programming languages}.\hskip 1em
  plus 0.5em minus 0.4em\relax ACM, 1997, pp. 106--119.

\bibitem{schneider2001language}
F.~B. Schneider, G.~Morrisett, and R.~Harper, ``A language-based approach to
  security,'' in \emph{Informatics}.\hskip 1em plus 0.5em minus 0.4em\relax
  Springer, 2001, pp. 86--101.

\bibitem{colby2000certifying}
C.~Colby, P.~Lee, G.~C. Necula, F.~Blau, M.~Plesko, and K.~Cline, ``A
  certifying compiler for java,'' in \emph{ACM SIGPLAN Notices}, vol.~35,
  no.~5.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2000, pp. 95--107.

\bibitem{leroy2006formal}
X.~Leroy, ``{Formal Certification of a Compiler Back-End or: Programming a
  Compiler with a Proof Assistant},'' in \emph{ACM SIGPLAN Notices}, vol.~41,
  no.~1.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2006, pp. 42--54.

\bibitem{pirzadeh2010extended}
H.~Pirzadeh, D.~Dub{\'e}, and A.~Hamou-Lhadj, ``{An extended proof-carrying
  code framework for security enforcement},'' in \emph{Transactions on
  computational science XI}.\hskip 1em plus 0.5em minus 0.4em\relax Springer,
  2010, pp. 249--269.

\bibitem{necula2001oracle}
G.~C. Necula and S.~P. Rahul, ``{Oracle-based checking of untrusted
  software},'' in \emph{ACM SIGPLAN Notices}, vol.~36, no.~3.\hskip 1em plus
  0.5em minus 0.4em\relax ACM, 2001, pp. 142--154.

\bibitem{sinha2015moat}
R.~Sinha, S.~Rajamani, S.~Seshia, and K.~Vaswani, ``{Moat: Verifying
  confidentiality of enclave programs},'' in \emph{Proceedings of the 22nd ACM
  SIGSAC Conference on Computer and Communications Security}.\hskip 1em plus
  0.5em minus 0.4em\relax ACM, 2015, pp. 1169--1184.

\bibitem{morrisett1999system}
G.~Morrisett, D.~Walker, K.~Crary, and N.~Glew, ``From system f to typed
  assembly language,'' \emph{ACM Transactions on Programming Languages and
  Systems (TOPLAS)}, vol.~21, no.~3, pp. 527--568, 1999.

\bibitem{capstone}
``{Capstone - The Ultimate Disassembler},''
  \url{http://www.capstone-engine.org/ }.

\bibitem{our-prototype}
``{DEFLECTION},'' \url{ https://github.com/StanPlatinum/Deflection}.

\bibitem{lee2017hacking}
J.~Lee, J.~Jang, Y.~Jang, N.~Kwak, Y.~Choi, C.~Choi, T.~Kim, M.~Peinado, and
  B.~B. Kang, ``{Hacking in darkness: Return-oriented programming against
  secure enclaves},'' in \emph{26th $\{$USENIX$\}$ Security Symposium
  ($\{$USENIX$\}$ Security 17)}, 2017, pp. 523--539.

\bibitem{biondo2018guard}
A.~Biondo, M.~Conti, L.~Davi, T.~Frassetto, and A.-R. Sadeghi, ``The guard's
  dilemma: Efficient code-reuse attacks against intel $\{$SGX$\}$,'' in
  \emph{27th $\{$USENIX$\}$ Security Symposium ($\{$USENIX$\}$ Security 18)},
  2018, pp. 1213--1227.

\bibitem{schwarz2019practical}
M.~Schwarz, S.~Weiser, and D.~Gruss, ``Practical enclave malware with intel
  sgx,'' in \emph{International Conference on Detection of Intrusions and
  Malware, and Vulnerability Assessment}.\hskip 1em plus 0.5em minus
  0.4em\relax Springer, 2019, pp. 177--196.

\bibitem{schwarz2017malware}
M.~Schwarz, S.~Weiser, D.~Gruss, C.~Maurice, and S.~Mangard, ``Malware guard
  extension: Using sgx to conceal cache attacks,'' in \emph{International
  Conference on Detection of Intrusions and Malware, and Vulnerability
  Assessment}.\hskip 1em plus 0.5em minus 0.4em\relax Springer, 2017, pp.
  3--24.

\bibitem{lee2017inferring}
S.~Lee, M.-W. Shih, P.~Gera, T.~Kim, H.~Kim, and M.~Peinado, ``Inferring
  fine-grained control flow inside $\{$SGX$\}$ enclaves with branch
  shadowing,'' in \emph{26th $\{$USENIX$\}$ Security Symposium ($\{$USENIX$\}$
  Security 17)}, 2017, pp. 557--574.

\bibitem{gras2018translation}
B.~Gras, K.~Razavi, H.~Bos, and C.~Giuffrida, ``Translation leak-aside buffer:
  Defeating cache side-channel protections with $\{$TLB$\}$ attacks,'' in
  \emph{27th $\{$USENIX$\}$ Security Symposium ($\{$USENIX$\}$ Security 18)},
  2018, pp. 955--972.

\bibitem{xu2015controlled}
Y.~Xu, W.~Cui, and M.~Peinado, ``Controlled-channel attacks: Deterministic side
  channels for untrusted operating systems,'' in \emph{2015 IEEE Symposium on
  Security and Privacy}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2015, pp.
  640--656.

\bibitem{homeier1995mechanically}
P.~V. Homeier and D.~F. Martin, ``A mechanically verified verification
  condition generator,'' \emph{The Computer Journal}, vol.~38, no.~2, pp.
  131--141, 1995.

\bibitem{paulson2000isabelle}
L.~C. Paulson, ``Isabelle: The next 700 theorem provers,'' \emph{arXiv preprint
  cs/9301106}, 2000.

\bibitem{de2008z3}
L.~De~Moura and N.~Bj{\o}rner, ``Z3: An efficient smt solver,'' in
  \emph{International conference on Tools and Algorithms for the Construction
  and Analysis of Systems}.\hskip 1em plus 0.5em minus 0.4em\relax Springer,
  2008, pp. 337--340.

\bibitem{bertot2013interactive}
Y.~Bertot and P.~Cast{\'e}ran, \emph{Interactive theorem proving and program
  development: Coqâ€™Art: the calculus of inductive constructions}.\hskip 1em
  plus 0.5em minus 0.4em\relax Springer Science \& Business Media, 2013.

\bibitem{appel2003trustworthy}
A.~W. Appel, N.~Michael, A.~Stump, and R.~Virga, ``{A Trustworthy Proof
  Checker},'' \emph{Journal of Automated Reasoning}, vol.~31, no. 3-4, pp.
  231--260, 2003.

\bibitem{brumley2011bap}
D.~Brumley, I.~Jager, T.~Avgerinos, and E.~J. Schwartz, ``Bap: A binary
  analysis platform,'' in \emph{International Conference on Computer Aided
  Verification}.\hskip 1em plus 0.5em minus 0.4em\relax Springer, 2011, pp.
  463--469.

\bibitem{appel2001foundational}
A.~W. Appel, ``{Foundational proof-carrying code},'' in \emph{Proceedings 16th
  Annual IEEE Symposium on Logic in Computer Science}.\hskip 1em plus 0.5em
  minus 0.4em\relax IEEE, 2001, pp. 247--256.

\bibitem{mccune2008flicker}
J.~M. McCune, B.~J. Parno, A.~Perrig, M.~K. Reiter, and H.~Isozaki, ``Flicker:
  An execution infrastructure for tcb minimization,'' in \emph{Proceedings of
  the 3rd ACM SIGOPS/EuroSys European Conference on Computer Systems 2008},
  2008, pp. 315--328.

\bibitem{wang2018detect}
Z.~Wang, X.~Ding, C.~Pang, J.~Guo, J.~Zhu, and B.~Mao, ``To detect stack buffer
  overflow with polymorphic canaries,'' in \emph{2018 48th Annual IEEE/IFIP
  International Conference on Dependable Systems and Networks (DSN)}.\hskip 1em
  plus 0.5em minus 0.4em\relax IEEE, 2018, pp. 243--254.

\bibitem{wang2017leaky}
W.~Wang, G.~Chen, X.~Pan, Y.~Zhang, X.~Wang, V.~Bindschaedler, H.~Tang, and
  C.~A. Gunter, ``Leaky cauldron on the dark land: Understanding memory
  side-channel hazards in sgx,'' in \emph{Proceedings of the 2017 ACM SIGSAC
  Conference on Computer and Communications Security}, 2017, pp. 2421--2434.

\bibitem{chen2018racing}
G.~Chen, W.~Wang, T.~Chen, S.~Chen, Y.~Zhang, X.~Wang, T.-H. Lai, and D.~Lin,
  ``Racing in hyperspace: Closing hyper-threading side channels on sgx with
  contrived data races,'' in \emph{2018 IEEE Symposium on Security and Privacy
  (SP)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2018, pp. 178--194.

\bibitem{gruss2017strong}
D.~Gruss, J.~Lettner, F.~Schuster, O.~Ohrimenko, I.~Haller, and M.~Costa,
  ``Strong and efficient cache side-channel protection using hardware
  transactional memory,'' in \emph{26th $\{$USENIX$\}$ Security Symposium
  ($\{$USENIX$\}$ Security 17)}, 2017, pp. 217--233.

\bibitem{knauth2018integrating}
T.~Knauth, M.~Steiner, S.~Chakrabarti, L.~Lei, C.~Xing, and M.~Vij,
  ``Integrating remote attestation with transport layer security,'' \emph{arXiv
  preprint arXiv:1801.05863}, 2018.

\bibitem{quynh2014capstone}
N.~A. Quynh, ``Capstone: Next-gen disassembly framework,'' \emph{Black Hat
  USA}, 2014.

\bibitem{occlum}
``Occlum,'' \url{ https://github.com/occlum/occlum}.

\bibitem{sinha2016design}
R.~Sinha, M.~Costa, A.~Lal, N.~P. Lopes, S.~Rajamani, S.~A. Seshia, and
  K.~Vaswani, ``{A Design and Verification Methodology for Secure Isolated
  Regions},'' in \emph{ACM SIGPLAN Notices}, vol.~51, no.~6.\hskip 1em plus
  0.5em minus 0.4em\relax ACM, 2016, pp. 665--681.

\bibitem{schuster2015vc3}
F.~Schuster, M.~Costa, C.~Fournet, C.~Gkantsidis, M.~Peinado, G.~Mainar-Ruiz,
  and M.~Russinovich, ``Vc3: Trustworthy data analytics in the cloud using
  sgx,'' in \emph{2015 IEEE Symposium on Security and Privacy}.\hskip 1em plus
  0.5em minus 0.4em\relax IEEE, 2015, pp. 38--54.

\bibitem{sgxnbench}
``Sgx nbench,'' \url{https://github.com/utds3lab/sgx-nbench}.

\bibitem{needleman1970general}
S.~B. Needleman and C.~D. Wunsch, ``A general method applicable to the search
  for similarities in the amino acid sequence of two proteins,'' \emph{Journal
  of molecular biology}, vol.~48, no.~3, pp. 443--453, 1970.

\bibitem{fasta-format}
``Fasta format,'' \url{https://en.wikipedia.org/wiki/FASTA_format}.

\bibitem{1000genomes}
``1000 genomes project,'' \url{
  https://en.wikipedia.org/wiki/1000_Genomes_Project}.

\bibitem{jensen1992using}
H.~L. Jensen, ``Using neural networks for credit scoring,'' \emph{Managerial
  finance}, vol.~18, no.~6, pp. 15--26, 1992.

\bibitem{mbedtls}
``mbed tls,'' \url{ https://tls.mbed.org/}.

\bibitem{siege}
``Siege,'' \url{ https://www.joedog.org/siege-home/}.

\bibitem{doychev2015cacheaudit}
G.~Doychev, B.~K{\"o}pf, L.~Mauborgne, and J.~Reineke, ``Cacheaudit: A tool for
  the static analysis of cache side channels,'' \emph{ACM Transactions on
  Information and System Security (TISSEC)}, vol.~18, no.~1, pp. 1--32, 2015.

\bibitem{almeida2016verifying}
J.~B. Almeida, M.~Barbosa, G.~Barthe, F.~Dupressoir, and M.~Emmi, ``Verifying
  constant-time implementations,'' in \emph{25th $\{$USENIX$\}$ Security
  Symposium ($\{$USENIX$\}$ Security 16)}, 2016, pp. 53--70.

\bibitem{shih2017t}
M.-W. Shih, S.~Lee, T.~Kim, and M.~Peinado, ``T-sgx: Eradicating
  controlled-channel attacks against enclave programs.'' in \emph{NDSS}, 2017.

\bibitem{wu2018eliminating}
M.~Wu, S.~Guo, P.~Schaumont, and C.~Wang, ``Eliminating timing side-channel
  leaks using program repair,'' in \emph{Proceedings of the 27th ACM SIGSOFT
  International Symposium on Software Testing and Analysis}, 2018, pp. 15--26.

\bibitem{wang2019identifying}
S.~Wang, Y.~Bao, X.~Liu, P.~Wang, D.~Zhang, and D.~Wu, ``Identifying
  cache-based side channels through secret-augmented abstract interpretation,''
  in \emph{28th $\{$USENIX$\}$ Security Symposium ($\{$USENIX$\}$ Security
  19)}, 2019, pp. 657--674.

\bibitem{orenbach2019cosmix}
M.~Orenbach, Y.~Michalevsky, C.~Fetzer, and M.~Silberstein, ``Cosmix: a
  compiler-based system for secure memory instrumentation and execution in
  enclaves,'' in \emph{2019 $\{$USENIX$\}$ Annual Technical Conference
  ($\{$USENIX$\}$$\{$ATC$\}$ 19)}, 2019, pp. 555--570.

\bibitem{liu2015can}
F.~Liu, H.~Wu, and R.~B. Lee, ``Can randomized mapping secure instruction
  caches from side-channel attacks?'' in \emph{Proceedings of the Fourth
  Workshop on Hardware and Architectural Support for Security and Privacy},
  2015, pp. 1--8.

\bibitem{sasy2017zerotrace}
S.~Sasy, S.~Gorbunov, and C.~W. Fletcher, ``Zerotrace: Oblivious memory
  primitives from intel sgx.'' \emph{IACR Cryptol. ePrint Arch.}, vol. 2017, p.
  549, 2017.

\bibitem{ahmad2019obfuscuro}
A.~Ahmad, B.~Joe, Y.~Xiao, Y.~Zhang, I.~Shin, and B.~Lee, ``Obfuscuro: A
  commodity obfuscation engine on intel sgx.'' in \emph{NDSS}, 2019.

\bibitem{liu2017demand}
W.~Liu, D.~Gao, and M.~K. Reiter, ``On-demand time blurring to support
  side-channel defense,'' in \emph{European Symposium on Research in Computer
  Security}.\hskip 1em plus 0.5em minus 0.4em\relax Springer, 2017, pp.
  210--228.

\bibitem{orenbach2020autarky}
M.~Orenbach, A.~Baumann, and M.~Silberstein, ``Autarky: closing controlled
  channels with self-paging enclaves,'' in \emph{Proceedings of the Fifteenth
  European Conference on Computer Systems}, 2020, pp. 1--16.

\bibitem{weichbrodt2016asyncshock}
N.~Weichbrodt, A.~Kurmus, P.~Pietzuch, and R.~Kapitza, ``Asyncshock: Exploiting
  synchronisation bugs in intel sgx enclaves,'' in \emph{European Symposium on
  Research in Computer Security}.\hskip 1em plus 0.5em minus 0.4em\relax
  Springer, 2016, pp. 440--457.

\bibitem{xu2019confirm}
X.~Xu, M.~Ghaffarinia, W.~Wang, K.~W. Hamlen, and Z.~Lin, ``$\{$CONFIRM$\}$:
  Evaluating compatibility and relevance of control-flow integrity protections
  for modern software,'' in \emph{28th $\{$USENIX$\}$ Security Symposium
  ($\{$USENIX$\}$ Security 19)}, 2019, pp. 1805--1821.

\bibitem{delozier2020hurdle}
C.~DeLozier, K.~Lakshminarayanan, G.~Pokam, and J.~Devietti, ``Hurdle: Securing
  jump instructions against code reuse attacks,'' in \emph{Proceedings of the
  Twenty-Fifth International Conference on Architectural Support for
  Programming Languages and Operating Systems}, 2020, pp. 653--666.

\bibitem{burow2019sok}
N.~Burow, X.~Zhang, and M.~Payer, ``Sok: Shining light on shadow stacks,'' in
  \emph{2019 IEEE Symposium on Security and Privacy (SP)}.\hskip 1em plus 0.5em
  minus 0.4em\relax IEEE, 2019, pp. 985--999.

\bibitem{hynes2018efficient}
N.~Hynes, R.~Cheng, and D.~Song, ``Efficient deep learning on multi-source
  private data,'' \emph{arXiv preprint arXiv:1807.06689}, 2018.

\bibitem{tian2019practical}
D.~Tian, J.~I. Choi, G.~Hernandez, P.~Traynor, and K.~R. Butler, ``A practical
  intel sgx setting for linux containers in the cloud,'' in \emph{Proceedings
  of the Ninth ACM Conference on Data and Application Security and Privacy},
  2019, pp. 255--266.

\bibitem{shinde2017panoply}
S.~Shinde, D.~Le~Tien, S.~Tople, and P.~Saxena, ``Panoply: Low-tcb linux
  applications with sgx enclaves.'' in \emph{NDSS}, 2017.

\bibitem{shanker2020evaluation}
K.~Shanker, A.~Joseph, and V.~Ganapathy, ``An evaluation of methods to port
  legacy code to sgx enclaves,'' in \emph{Proceedings of the 28th ACM Joint
  Meeting on European Software Engineering Conference and Symposium on the
  Foundations of Software Engineering}, 2020, pp. 1077--1088.

\bibitem{jiang2020uranus}
J.~Jiang, X.~Chen, T.~Li, C.~Wang, T.~Shen, S.~Zhao, H.~Cui, C.-L. Wang, and
  F.~Zhang, ``Uranus: Simple, efficient sgx programming and its applications,''
  in \emph{Proceedings of the 15th ACM Asia Conference on Computer and
  Communications Security}, 2020, pp. 826--840.

\bibitem{hunt2018chiron}
T.~Hunt, C.~Song, R.~Shokri, V.~Shmatikov, and E.~Witchel, ``Chiron:
  Privacy-preserving machine learning as a service,'' \emph{arXiv preprint
  arXiv:1803.05961}, 2018.

\bibitem{erlingsson2006xfi}
{\'U}.~Erlingsson, M.~Abadi, M.~Vrable, M.~Budiu, and G.~C. Necula, ``{XFI:
  Software guards for system address spaces},'' in \emph{Proceedings of the 7th
  symposium on Operating systems design and implementation}.\hskip 1em plus
  0.5em minus 0.4em\relax USENIX Association, 2006, pp. 75--88.

\bibitem{zhou2014armlock}
Y.~Zhou, X.~Wang, Y.~Chen, and Z.~Wang, ``Armlock: Hardware-based fault
  isolation for arm,'' in \emph{Proceedings of the 2014 ACM SIGSAC Conference
  on Computer and Communications Security}, 2014, pp. 558--569.

\bibitem{tan2017principles}
G.~Tan \emph{et~al.}, \emph{Principles and implementation techniques of
  software-based fault isolation}.\hskip 1em plus 0.5em minus 0.4em\relax Now
  Publishers, 2017.

\bibitem{van2018foreshadow}
J.~Van~Bulck, M.~Minkin, O.~Weisse, D.~Genkin, B.~Kasikci, F.~Piessens,
  M.~Silberstein, T.~F. Wenisch, Y.~Yarom, and R.~Strackx, ``Foreshadow:
  Extracting the keys to the intel $\{$SGX$\}$ kingdom with transient
  out-of-order execution,'' in \emph{27th $\{$USENIX$\}$ Security Symposium
  ($\{$USENIX$\}$ Security 18)}, 2018, pp. 991--1008.

\bibitem{chen2019sgxpectre}
G.~Chen, S.~Chen, Y.~Xiao, Y.~Zhang, Z.~Lin, and T.~H. Lai, ``Sgxpectre:
  Stealing intel secrets from sgx enclaves via speculative execution,'' in
  \emph{2019 IEEE European Symposium on Security and Privacy (EuroS\&P)}.\hskip
  1em plus 0.5em minus 0.4em\relax IEEE, 2019, pp. 142--157.

\bibitem{subramanyan2017formal}
P.~Subramanyan, R.~Sinha, I.~Lebedev, S.~Devadas, and S.~A. Seshia, ``{A Formal
  Foundation for Secure Remote Execution of Enclaves},'' in \emph{Proceedings
  of the 2017 ACM SIGSAC Conference on Computer and Communications
  Security}.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2017, pp. 2435--2450.

\bibitem{shinde2016preventing}
S.~Shinde, Z.~L. Chua, V.~Narayanan, and P.~Saxena, ``Preventing page faults
  from telling your secrets,'' in \emph{Proceedings of the 11th ACM on Asia
  Conference on Computer and Communications Security}, 2016, pp. 317--328.

\bibitem{oleksenko2018varys}
O.~Oleksenko, B.~Trach, R.~Krahn, M.~Silberstein, and C.~Fetzer, ``Varys:
  Protecting $\{$SGX$\}$ enclaves from practical side-channel attacks,'' in
  \emph{2018 $\{$USENIX$\}$ Annual Technical Conference
  ($\{$USENIX$\}$$\{$ATC$\}$ 18)}, 2018, pp. 227--240.

\bibitem{sinha2017compiler}
R.~Sinha, S.~Rajamani, and S.~A. Seshia, ``A compiler and verifier for page
  access oblivious computation,'' in \emph{Proceedings of the 2017 11th Joint
  Meeting on Foundations of Software Engineering}, 2017, pp. 649--660.

\bibitem{kuccuk2019managing}
K.~A. K{\"u}{\c{c}}{\"u}k, D.~Grawrock, and A.~Martin, ``Managing
  confidentiality leaks through private algorithms on software guard extensions
  (sgx) enclaves,'' \emph{EURASIP Journal on Information Security}, vol. 2019,
  no.~1, p.~14, 2019.

\bibitem{silva2017dynsgx}
R.~Silva, P.~Barbosa, and A.~Brito, ``{DynSGX: A Privacy Preserving Toolset for
  Dinamically Loading Functions into Intel (R) SGX Enclaves},'' in \emph{2017
  IEEE International Conference on Cloud Computing Technology and Science
  (CloudCom)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2017, pp. 314--321.

\bibitem{bauman2018sgxelide}
E.~Bauman, H.~Wang, M.~Zhang, and Z.~Lin, ``{SGXElide: enabling enclave code
  secrecy via self-modification},'' in \emph{Proceedings of the 2018
  International Symposium on Code Generation and Optimization}.\hskip 1em plus
  0.5em minus 0.4em\relax ACM, 2018, pp. 75--86.

\bibitem{barnett2005boogie}
M.~Barnett, B.-Y.~E. Chang, R.~DeLine, B.~Jacobs, and K.~R.~M. Leino, ``Boogie:
  A modular reusable verifier for object-oriented programs,'' in
  \emph{International Symposium on Formal Methods for Components and
  Objects}.\hskip 1em plus 0.5em minus 0.4em\relax Springer, 2005, pp.
  364--387.

\end{thebibliography}
